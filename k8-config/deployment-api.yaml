apiVersion: apps/v1
kind: Deployment
metadata:
  # this is for logging / debugging
  name: api-deployment
spec:
  # how many instances
  replicas: 1
  # this matches the pod label
  selector:
    matchLabels:
      component: api
  # this describes the pod definition
  template:
    metadata:
      labels:
        component: api
    spec:
      containers:
        - name: client
          image: dockerquark/journal-api-prod
          ports:
            - containerPort: 4000
          env:
            - name: REDISHOST
              value: redis-cluster-ip
            - name: REDISPORT
              value: "6379"
            - name: PGUSER
              value: postgres
            # - name: PGHOST
            #   value: ps-cluster-ip
            - name: PGHOST
              value: 127.0.0.1
            - name: PGDATABASE
              value: postgres
            - name: PGPASSWORD
              value: postgres_password
            - name: PGPORT
              value: "5432"
            - name: SALT
              value: "1"
            - name: ACCESS_TOKEN_EXPIRY
              value: 10d
            - name: ACCESS_TOKEN_SECRET
              value: secret
            - name: REFRESH_TOKEN_EXPIRY
              value: 10d
            - name: REFRESH_TOKEN_SECRET
              value: secret
            - name: LOCAL_URL
              value: http://192.168.64.3
            - name: SYNC
              value: "true"
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.14
          command: [
              "/cloud_sql_proxy",
              "-instances=journal-271913:europe-west2:journal-ps-db=tcp:5432",
              # If running on a VPC, the Cloud SQL proxy can connect via Private IP. See:
              # https://cloud.google.com/sql/docs/mysql/private-ip for more info.
              # "-ip_address_types=PRIVATE",
              "-credential_file=/secrets/cloudsql/credentials.json",
            ]
          # [START cloudsql_security_context]
          securityContext:
            runAsUser: 2 # non-root user
            allowPrivilegeEscalation: false
          # [END cloudsql_security_context]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
        # [END proxy_container]
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
